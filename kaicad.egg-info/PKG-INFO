Metadata-Version: 2.4
Name: kaicad
Version: 0.2.0
Summary: AI-powered KiCad schematic editor sidecar
Author: Gunes Yilmaz
License: AGPL-3.0 License
        
        Copyright (C) 2025 Gunes Yilmaz
        
        This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
        
        This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
        
        You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.
Project-URL: Homepage, https://github.com/hunes3d/kAIcad
Project-URL: Repository, https://github.com/hunes3d/kAIcad
Project-URL: Issues, https://github.com/hunes3d/kAIcad/issues
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: 3.14
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: kicad-skip==0.2.5
Requires-Dist: pydantic<3.0.0,>=2.0.0
Requires-Dist: openai<2.0.0,>=1.0.0
Requires-Dist: flask<4.0.0,>=3.0.0
Requires-Dist: flask-wtf<2.0.0,>=1.2.0
Requires-Dist: rich<14.0.0,>=13.0.0
Requires-Dist: typer<1.0.0,>=0.9.0
Requires-Dist: watchdog<5.0.0,>=3.0.0
Requires-Dist: keyring<26.0.0,>=24.0.0
Requires-Dist: python-dotenv<2.0.0,>=1.0.0
Provides-Extra: dev
Requires-Dist: pytest<9.0.0,>=8.0.0; extra == "dev"
Requires-Dist: pre-commit<4.0.0,>=3.0.0; extra == "dev"
Requires-Dist: ruff<1.0.0,>=0.1.0; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest<9.0.0,>=8.0.0; extra == "test"
Requires-Dist: pytest-cov<6.0.0,>=4.0.0; extra == "test"
Dynamic: license-file

Ôªø<div align="center">
  <img src="assets/kaicad.svg" alt="kAIcad Logo" width="320" />

  <h1>kAIcad</h1>
  <p><strong>AI‚Äëpowered sidecar for KiCad schematics</strong></p>

  <p>
    <a href="https://github.com/hunes3d/kAIcad/actions"><img alt="CI" src="https://github.com/hunes3d/kAIcad/workflows/CI/badge.svg"></a>
    <a href="https://app.codecov.io/gh/hunes3d/kAIcad"><img alt="Coverage" src="https://codecov.io/gh/hunes3d/kAIcad/branch/main/graph/badge.svg"></a>
    <img alt="Python" src="https://img.shields.io/badge/python-3.10+-blue.svg">
    <a href="LICENSE"><img alt="License" src="https://img.shields.io/badge/License-AGPL--3.0-blue.svg"></a>
    <img alt="Version" src="https://img.shields.io/badge/version-0.2.0-green.svg">
  </p>

  <p>Describe a change in plain English ‚Üí get a plan ‚Üí apply it to your <code>.kicad_sch</code> file.</p>
</div>

## What it does

- ‚ÄúAdd LED and 1k resistor between VCC and GND‚Äù ‚Üí places LED + resistor and wires nets
- ‚ÄúConnect U1 pin 3 to R5 pin 2‚Äù ‚Üí makes the connection via wire/label
- After applying, it can run ERC and export PDF/netlist with KiCad CLI

## Highlights

- ü§ñ AI planning via OpenAI models (aliases supported)
- üñ•Ô∏è Three UIs: CLI, Desktop (Tkinter), Web (Flask, default port 5173)
- üîç Inspect components, nets, and hierarchical sheets
- ‚úÖ Optional post‚Äëapply: ERC, PDF, and netlist export
- ÔøΩ Stores API key in your OS keychain when available

## Quick start (Windows, PowerShell)

Prerequisites:
- Python 3.10+
- KiCad 9 CLI on PATH (verify with: `kicad-cli --version`)
- OpenAI API key

Option A ‚Äî pipx (recommended):

```powershell
pipx install git+https://github.com/hunes3d/kAIcad.git

# Create a .env file (or set env vars) next to your project
"OPENAI_API_KEY=sk-your-key" | Out-File -Encoding ascii -FilePath .env
"OPENAI_MODEL=gpt-4o-mini"   | Add-Content .env
"FLASK_ENV=development"      | Add-Content .env  # for local web UI without a custom secret

# Launch your preferred UI
kaicad-desk   # Desktop GUI
# kaicad-web  # Web UI at http://127.0.0.1:5173
# kaicad      # CLI
```

Option B ‚Äî dev install:

```powershell
git clone https://github.com/hunes3d/kAIcad.git
cd kAIcad
python -m venv .venv
.\.venv\Scripts\activate
pip install -e .

Copy-Item .env.example .env
# Edit .env to set OPENAI_API_KEY and (optionally) OPENAI_MODEL

python -m sidecar.desk   # Desktop GUI
# python -m sidecar.web  # Web UI
# python -m sidecar.main # CLI
```

## VS Code tasks

Tasks are preconfigured:
- sidecar ‚Äî CLI
- desktop-gui ‚Äî Desktop GUI
- web-gui ‚Äî Web UI
- erc / pdf / netlist ‚Äî KiCad CLI helpers
- plan:demo ‚Äî Generate a demo plan
- e2e:export-pdf ‚Äî Plan ‚Üí apply ‚Üí export PDF

Use Ctrl+Shift+B to open the task picker.

## Configuration

Use a local `.env` file or environment variables:

- OPENAI_API_KEY ‚Äî required
- OPENAI_MODEL ‚Äî e.g., gpt-4o-mini (recommended)
- OPENAI_TEMPERATURE ‚Äî default 0.0
- FLASK_ENV ‚Äî set to `development` for local web without a custom secret
- FLASK_SECRET_KEY ‚Äî required in production web mode
- KAICAD_PROJECT ‚Äî default project path

See `.env.example` for a ready-to-copy template.

## Reproducible installs & tests

- Dev environment:
  - Install base + dev deps: `pip install -r requirements-dev.txt`
  - Or use the lockfile: `pip install -r requirements.lock`
- Refresh the lockfile after dependency changes (requires pip-tools):
  - `pip-compile --generate-hashes --output-file=requirements.lock requirements.txt`
- Run tests with coverage locally:
  - `pytest -q --cov=sidecar --cov-report=term-missing`

CI uploads coverage to Codecov; see badge above.

## Tips & troubleshooting

- Web UI exits immediately? Set `FLASK_ENV=development` or provide a secure `FLASK_SECRET_KEY`.
- KiCad tools not found? Add `C:\\Program Files\\KiCad\\9.0\\bin` to PATH and re-open your shell.
- Model errors? Try `OPENAI_MODEL=gpt-4o-mini` and ensure your API key is valid.

## Wiki

Documentation is also available in the GitHub Wiki. See the local drafts under `wiki/` or visit:

- GitHub Wiki: https://github.com/hunes3d/kAIcad/wiki

## License

AGPL-3.0 ‚Äî see [`LICENSE`](LICENSE).

## Acknowledgments

- kicad-skip ‚Äî KiCad file manipulation
- OpenAI ‚Äî language models
- KiCad ‚Äî Open‚Äësource EDA suite
